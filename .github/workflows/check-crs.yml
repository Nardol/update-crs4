name: Check CRS Updates

on:
  workflow_dispatch:
    inputs:
      force_issue:
        description: 'Set to true to force issue creation even if versions match'
        required: false
        default: 'false'
  push:
    paths:
      - '.github/workflows/check-crs.yml'
  schedule:
    - cron: '0 6 * * 1'

jobs:
  check:
    if: github.event_name != 'push'
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Determine latest CRS version
        id: versions
        run: |
          set -euo pipefail
          latest=$(curl -fsSL https://api.github.com/repos/coreruleset/coreruleset/releases/latest | python3 -c 'import json,sys; print(json.load(sys.stdin)["tag_name"].lstrip("v"))')
          if [[ -z "$latest" ]]; then
            echo "latest=" >> "$GITHUB_OUTPUT"
            echo "needs_issue=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          current=$(grep -oE 'update_crs_inplace.sh --version [0-9]+\.[0-9]+\.[0-9]+' README.md | head -n1 | awk '{print $3}' || true)
          echo "latest=$latest" >> "$GITHUB_OUTPUT"
          echo "current=$current" >> "$GITHUB_OUTPUT"
          force="${{ github.event.inputs.force_issue }}"
          if [[ -z "$current" ]]; then
            echo "needs_issue=true" >> "$GITHUB_OUTPUT"
          elif [[ "$latest" != "$current" ]]; then
            echo "needs_issue=true" >> "$GITHUB_OUTPUT"
          elif [[ "$force" == "true" ]]; then
            echo "needs_issue=true" >> "$GITHUB_OUTPUT"
          else
            echo "needs_issue=false" >> "$GITHUB_OUTPUT"
          fi
          if [[ "$latest" != "$current" || "$force" == "true" ]]; then
            cat <<ISSUE > update-notice.md
A newer CRS release **v$latest** is available on GitHub.
Current README example references **$current**.

- Upstream release page: https://github.com/coreruleset/coreruleset/releases/tag/v$latest
- Action: update README/PROGRESS and run \
  `update_crs_inplace.sh --version $latest ...` for validation.

_This issue was created automatically by the scheduled Check CRS Updates workflow._
ISSUE
          fi
      - name: Open issue for new release
        if: steps.versions.outputs.needs_issue == 'true'
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: New CRS release v${{ steps.versions.outputs.latest }} detected
          content-filepath: update-notice.md
          labels: maintenance
